[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Hilati\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Hilati\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (Amazon.com Inc. Java 18.0.2)
[debug]       Load.loadUnit: plugins took 142.5541ms
[debug]       Load.loadUnit: defsScala took 0.4963ms
[debug] [Loading] Scanning directory C:\Users\Hilati\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Hilati\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 28.0646 ms
[debug]           Load.resolveProject(global-plugins) took 64.1367ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Hilati\.sbt\1.0\plugins, plugins: List(<none>))) took 118.2486ms
[debug] [Loading] Done in C:\Users\Hilati\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 162.6918ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3899ms
[debug]     Load.loadUnit(file:/C:/Users/Hilati/.sbt/1.0/plugins/, ...) took 326.6853ms
[debug]   Load.apply: load took 610.6472ms
[debug]   Load.apply: resolveProjects took 5.2161ms
[debug]   Load.apply: finalTransforms took 70.5026ms
[debug]   Load.apply: config.delegates took 10.9544ms
[debug]   Load.apply: Def.make(settings)... took 580.0874ms
[debug]   Load.apply: structureIndex took 133.8678ms
[debug]   Load.apply: mkStreams took 2.2802ms
[info] loading global plugins from C:\Users\Hilati\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6231.0764ms
[debug]           Load.loadUnit: plugins took 24.5493ms
[debug]           Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory C:\Users\Hilati\IdeaProjects\scalaTuto1\project
[debug]             Load.loadUnit: mkEval took 7.901ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Hilati\IdeaProjects\scalaTuto1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1868 ms
[info] loading settings for project scalatuto1-build from idea.sbt ...
[debug]               Load.resolveProject(scalatuto1-build) took 3.6719ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalatuto1-build, base: C:\Users\Hilati\IdeaProjects\scalaTuto1\project, plugins: List(<none>))) took 6.5764ms
[debug] [Loading] Done in C:\Users\Hilati\IdeaProjects\scalaTuto1\project, returning: (scalatuto1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2899.171ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.8204ms
[debug]         Load.loadUnit(file:/C:/Users/Hilati/IdeaProjects/scalaTuto1/project/, ...) took 2929.5663ms
[debug]       Load.apply: load took 2931.2154ms
[debug]       Load.apply: resolveProjects took 0.1051ms
[debug]       Load.apply: finalTransforms took 12.1411ms
[debug]       Load.apply: config.delegates took 0.4814ms
[debug]       Load.apply: Def.make(settings)... took 105.1631ms
[debug]       Load.apply: structureIndex took 26.4325ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from C:\Users\Hilati\IdeaProjects\scalaTuto1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4962.5862ms
[debug]     Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory C:\Users\Hilati\IdeaProjects\scalaTuto1
[debug]       Load.loadUnit: mkEval took 0.3835ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5786 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 133.5978ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Hilati\IdeaProjects\scalaTuto1, plugins: List(<none>))) took 143.5988ms
[debug] [Loading] Done in C:\Users\Hilati\IdeaProjects\scalaTuto1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1682.1197ms
[debug]     Load.loadUnit: cleanEvalClasses took 51.3365ms
[debug]   Load.loadUnit(file:/C:/Users/Hilati/IdeaProjects/scalaTuto1/, ...) took 6697.2903ms
[debug] Load.apply: load took 6699.9452ms
[debug] Load.apply: resolveProjects took 0.341ms
[debug] Load.apply: finalTransforms took 61.1826ms
[debug] Load.apply: config.delegates took 0.3413ms
[debug] Load.apply: Def.make(settings)... took 275.0652ms
[debug] Load.apply: structureIndex took 61.3296ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to scalaTuto1 (in build file:/C:/Users/Hilati/IdeaProjects/scalaTuto1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60011 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60011, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scalaTuto1 (in build file:/C:/Users/Hilati/IdeaProjects/scalaTuto1/)
[debug] > Exec(idea-shell, None, None)
